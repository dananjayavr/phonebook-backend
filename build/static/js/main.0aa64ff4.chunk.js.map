{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","components/Error.js","services/contact.js","App.js","index.js"],"names":["Filter","props","onChange","handler","PersonForm","handlerNewName","value","nameValue","handlerNewNumber","numberValue","type","onClick","submitHandler","Person","person","name","number","deleteContact","Notification","message","className","Error","newObject","axios","post","then","response","data","id","delete","updatedObject","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","notification","setNotification","errorMessage","setErrorMessage","useEffect","get","event","target","preventDefault","latestName","find","personToUpdate","map","filter","pop","window","confirm","ContactService","returnedValue","i","console","log","catch","error","returnedContact","concat","setTimeout","toLowerCase","includes","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aa64ff4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n    return (<div>\n        filter shown with <input onChange={props.handler}/>\n    </div>)\n}\n\nexport default Filter","import React from 'react';\n\nconst PersonForm = (props) => {\n    return (\n        <form>\n            <div>\n                name: <input onChange={props.handlerNewName} value={props.nameValue} />\n            </div>\n            <div>\n                number: <input onChange={props.handlerNewNumber} value={props.numberValue} />\n            </div>\n            <div>\n                <button type=\"submit\" onClick={props.submitHandler}>add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react';\n\nconst Person = (props) => {\n    return (\n        <div>\n            <div>\n                {props.person.name} {props.person.number}\n                <button onClick={props.deleteContact}>delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Person","import React from 'react'\n\nconst Notification = ({message}) => {\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Error = ({message}) => {\n    if(message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst updateNumber = (id, updatedObject) => {\n    const request = axios.put(`${baseUrl}/${id}`,updatedObject)\n    return request.then(response => response.data)\n}\n\nexport default { create, deleteContact, updateNumber }","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport ContactService from './services/contact'\n\nimport './index.css';\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const deleteContact = (id) => {\n    if (window.confirm(`Delete ${persons.filter(person => person.id === id).pop().name}?`)) {\n      ContactService\n        .deleteContact(id)\n        .then(response => {\n          setPersons(persons.map(person => person.id !== id ? person : { name: null, number: null, id: null }))\n        }).catch(error => {\n          setErrorMessage(`Information of ${persons.filter(person => person.id === id).pop().name} has already been removed from server`)\n        })\n    } else {\n\n    }\n  }\n\n  const hook = () => {\n    axios\n      .get('/api/persons')\n      .then(response => {\n        setPersons(response.data)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const addNewPerson = (event) => {\n    event.preventDefault()\n    const latestName = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.find(person => person.name === newName)) {\n      const personToUpdate = persons.map(person => {\n        if(person.name === newName) {\n          return {name:person.name,number:newNumber,id:person.id}\n        } else {\n          return null\n        }\n      }).filter(id => id !== null).pop()\n\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        ContactService\n          .updateNumber(personToUpdate.id, personToUpdate)\n          .then(returnedValue => {\n            persons.map((person,i) => {\n              console.log(i)\n              if(i === personToUpdate.id-1) {\n                person.number = newNumber\n                return true\n              } else {\n                return false\n              }\n            })\n            setPersons(persons)\n            setNotification(`Updated ${returnedValue.name}`)\n          }).catch(error => {\n            setErrorMessage(`Information of ${newName} has already been removed from server`)\n          })\n      }\n    } else {\n      ContactService\n        .create(latestName)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact))\n          setNotification(`Added ${returnedContact.name}`)\n        })\n    }\n\n    ContactService\n      .create(latestName)\n      .then(returnedContact => {\n        setPersons(persons.concat(returnedContact))\n        setNotification(`Added ${returnedContact.name}`)\n      })\n\n    setNewNumber('')\n    setNewName('')\n\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000)\n  }\n\n  const handleAddNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleAddNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNameFilter = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification message={notification} />\n      <Error message={errorMessage} />\n      <h2>Phonebook</h2>\n      <Filter handler={handleNameFilter} />\n      <h2>add a new</h2>\n\n      <PersonForm\n        handlerNewName={handleAddNewName}\n        nameValue={newName}\n        handlerNewNumber={handleAddNewNumber}\n        numberValue={newNumber}\n        submitHandler={addNewPerson}\n      />\n\n      <h2>Numbers</h2>\n      {persons.map((person, i) => {\n        if (person.name !== null) {\n          if (person.name.toLowerCase().includes(nameFilter.toLowerCase())) {\n            return (\n              <Person person={person} key={i} deleteContact={() => deleteContact(person.id)} />\n            )\n          } else {\n            return false\n          }\n        } else {\n          return false\n        }\n      })}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n"],"sourceRoot":""}